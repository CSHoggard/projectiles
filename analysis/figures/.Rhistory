axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 7),
axis.text.x = element_blank(),
strip.text.x = element_text(size = 9))
ggsave("Figure_1.png", plot = last_plot(), dpi = 400)
data_clean %>%
select(-delivery, -museum_id, -proposed_grouping, -proposed_grouping_2) %>%
pivot_longer(everything()) %>%
group_by(name) %>%
na.omit() %>%
my_skim() %>%
select(-skim_variable, -skim_type, -n_missing, -complete_rate, -numeric.p0, -numeric.p100) %>%
rename("variable" = "name",
"mean" = "numeric.mean",
"sd" = "numeric.sd",
"p25" = "numeric.p25",
"p50" = "numeric.p50",
"p75" = "numeric.p75",
"skewness" = "numeric.skewness",
"kurtosis" = "numeric.kurtosis",
"max" = "numeric.max",
"min" = "numeric.min",
"median" = "numeric.median") %>%
select(variable, min, max, median, mean, sd, p25, p75, kurtosis, skewness) %>%
mutate_at(2:10, round, 1) %>%
mutate(cv = round((sd/mean) * 100, 1)) %>%  gt()
data_clean %>%
filter(delivery == "Hand Thrown") %>%
select(-delivery, -museum_id, -proposed_grouping, -proposed_grouping_2) %>%
pivot_longer(everything()) %>%
group_by(name) %>%
na.omit() %>%
my_skim() %>%
select(-skim_variable, -skim_type, -n_missing, -complete_rate, -numeric.p0, -numeric.p100) %>%
rename("variable" = "name",
"mean" = "numeric.mean",
"sd" = "numeric.sd",
"p25" = "numeric.p25",
"p50" = "numeric.p50",
"p75" = "numeric.p75",
"skewness" = "numeric.skewness",
"kurtosis" = "numeric.kurtosis",
"max" = "numeric.max",
"min" = "numeric.min",
"median" = "numeric.median") %>%
select(variable, min, max, median, mean, sd, p25, p75, kurtosis, skewness) %>%
mutate_at(2:10, round, 1) %>%
mutate(cv = round((sd/mean) * 100, 1)) %>%  gt()
gtsave(filename = "hand_thrown_table.html", inline_css = TRUE)
a <- data_clean %>%
filter(delivery == "Hand Thrown") %>%
select(-delivery, -museum_id, -proposed_grouping, -proposed_grouping_2) %>%
pivot_longer(everything()) %>%
group_by(name) %>%
na.omit() %>%
my_skim() %>%
select(-skim_variable, -skim_type, -n_missing, -complete_rate, -numeric.p0, -numeric.p100) %>%
rename("variable" = "name",
"mean" = "numeric.mean",
"sd" = "numeric.sd",
"p25" = "numeric.p25",
"p50" = "numeric.p50",
"p75" = "numeric.p75",
"skewness" = "numeric.skewness",
"kurtosis" = "numeric.kurtosis",
"max" = "numeric.max",
"min" = "numeric.min",
"median" = "numeric.median") %>%
select(variable, min, max, median, mean, sd, p25, p75, kurtosis, skewness) %>%
mutate_at(2:10, round, 1) %>%
mutate(cv = round((sd/mean) * 100, 1)) %>%  gt()
gtsave(a, filename = "hand_thrown_table.html", inline_css = TRUE)
a <- data_clean %>%
filter(delivery == "Thrust") %>%
select(-delivery, -museum_id, -proposed_grouping, -proposed_grouping_2) %>%
pivot_longer(everything()) %>%
group_by(name) %>%
na.omit() %>%
my_skim() %>%
select(-skim_variable, -skim_type, -n_missing, -complete_rate, -numeric.p0, -numeric.p100) %>%
rename("variable" = "name",
"mean" = "numeric.mean",
"sd" = "numeric.sd",
"p25" = "numeric.p25",
"p50" = "numeric.p50",
"p75" = "numeric.p75",
"skewness" = "numeric.skewness",
"kurtosis" = "numeric.kurtosis",
"max" = "numeric.max",
"min" = "numeric.min",
"median" = "numeric.median") %>%
select(variable, min, max, median, mean, sd, p25, p75, kurtosis, skewness) %>%
mutate_at(2:10, round, 1) %>%
mutate(cv = round((sd/mean) * 100, 1)) %>%  gt()
gtsave(a, filename = "thrust_table.html", inline_css = TRUE)
a <- data_clean %>%
filter(delivery == "Unknown") %>%
select(-delivery, -museum_id, -proposed_grouping, -proposed_grouping_2) %>%
pivot_longer(everything()) %>%
group_by(name) %>%
na.omit() %>%
my_skim() %>%
select(-skim_variable, -skim_type, -n_missing, -complete_rate, -numeric.p0, -numeric.p100) %>%
rename("variable" = "name",
"mean" = "numeric.mean",
"sd" = "numeric.sd",
"p25" = "numeric.p25",
"p50" = "numeric.p50",
"p75" = "numeric.p75",
"skewness" = "numeric.skewness",
"kurtosis" = "numeric.kurtosis",
"max" = "numeric.max",
"min" = "numeric.min",
"median" = "numeric.median") %>%
select(variable, min, max, median, mean, sd, p25, p75, kurtosis, skewness) %>%
mutate_at(2:10, round, 1) %>%
mutate(cv = round((sd/mean) * 100, 1)) %>%  gt()
gtsave(a, filename = "unknown_table.html", inline_css = TRUE)
aov.data <- data_clean %>%
select(-museum_id, -proposed_grouping, -proposed_grouping_2) %>%
filter(delivery != "Unknown" ) %>%
droplevels()
aov.results <- aov(length + max_dia + lmd + percent_lmd + po_b + percent_po_b +
dia_10 + dia_50 + dia_100 + dia_150 + dia_200 + dia_250 + dia_300 +
dia_800 + dia_mid + mass ~ delivery, data = aov.data)
summary(aov.results)
t1 <- data_clean %>%
select(-museum_id, -proposed_grouping, -proposed_grouping_2) %>%
pairwise_t_test(length ~ delivery , p.adjust.method = "bonferroni")
t2 <- data_clean %>%
select(-museum_id, -proposed_grouping, -proposed_grouping_2) %>%
pairwise_t_test(max_dia ~ delivery , p.adjust.method = "bonferroni")
t3 <- data_clean %>%
select(-museum_id, -proposed_grouping, -proposed_grouping_2) %>%
pairwise_t_test(lmd ~ delivery , p.adjust.method = "bonferroni")
t4 <- data_clean %>%
select(-museum_id, -proposed_grouping, -proposed_grouping_2) %>%
pairwise_t_test(percent_lmd ~ delivery , p.adjust.method = "bonferroni")
t5 <- data_clean %>%
select(-museum_id, -proposed_grouping, -proposed_grouping_2) %>%
pairwise_t_test(po_b ~ delivery , p.adjust.method = "bonferroni")
t6 <- data_clean %>%
select(-museum_id, -proposed_grouping, -proposed_grouping_2) %>%
pairwise_t_test(percent_po_b ~ delivery , p.adjust.method = "bonferroni")
t7 <- data_clean %>%
select(-museum_id, -proposed_grouping, -proposed_grouping_2) %>%
pairwise_t_test(dia_10 ~ delivery , p.adjust.method = "bonferroni")
t8 <- data_clean %>%
select(-museum_id, -proposed_grouping, -proposed_grouping_2) %>%
pairwise_t_test(dia_50 ~ delivery , p.adjust.method = "bonferroni")
t9 <- data_clean %>%
select(-museum_id, -proposed_grouping, -proposed_grouping_2) %>%
pairwise_t_test(dia_100 ~ delivery , p.adjust.method = "bonferroni")
t10 <- data_clean %>%
select(-museum_id, -proposed_grouping, -proposed_grouping_2) %>%
pairwise_t_test(dia_150 ~ delivery , p.adjust.method = "bonferroni")
t11 <- data_clean %>%
select(-museum_id, -proposed_grouping, -proposed_grouping_2) %>%
pairwise_t_test(dia_200 ~ delivery , p.adjust.method = "bonferroni")
t12 <- data_clean %>%
select(-museum_id, -proposed_grouping, -proposed_grouping_2) %>%
pairwise_t_test(dia_250 ~ delivery , p.adjust.method = "bonferroni")
t13 <- data_clean %>%
select(-museum_id, -proposed_grouping, -proposed_grouping_2) %>%
pairwise_t_test(dia_300 ~ delivery , p.adjust.method = "bonferroni")
t14 <- data_clean %>%
select(-museum_id, -proposed_grouping, -proposed_grouping_2) %>%
pairwise_t_test(dia_800 ~ delivery , p.adjust.method = "bonferroni")
t15 <- data_clean %>%
select(-museum_id, -proposed_grouping, -proposed_grouping_2) %>%
pairwise_t_test(dia_mid ~ delivery , p.adjust.method = "bonferroni")
t16 <- data_clean %>%
select(-museum_id, -proposed_grouping, -proposed_grouping_2) %>%
pairwise_t_test(mass ~ delivery , p.adjust.method = "bonferroni")
tc <- bind_rows(t1, t2, t3, t4, t5,
t6, t7, t8, t9, t10,
t11, t12, t13, t14, t15, t16) %>%
unite("merged", group1, group2, sep = " vs. ", remove = FALSE) %>%
mutate(significance.padj = if_else(p.adj < 0.05, "Yes", "No"))
ggplot(tc, aes(merged, .y.,
colour = significance.padj)) +
geom_text(aes(x = merged, y = .y., label = round(p.adj, 3)),
family = "Roboto",
size = 4) +
labs(x = NULL,
y = NULL,
colour = NULL) +
theme_minimal() +
theme(text = element_text(family = "Roboto", size = 11),
legend.position = "none",
plot.margin = margin(20,20,20,20),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank()
)
# Insert Pairwise testing here!
summary(aov.results)
tc
tc %>%
select(.y., merged, p.adj)
tc %>%
select(.y., merged, p.adj) %>%
gt()
tc %>%
select(.y., merged, p.adj) %>%
pivot_wider(names_from = .y., values_from = p.adj)
_
tc %>%
select(.y., merged, p.adj) %>%
pivot_longer(names_from = merged, values_from = p.adj)
tc %>%
select(.y., merged, p.adj) %>%
pivot_wider(names_from = merged, values_from = p.adj)
tc %>%
select(.y., merged, p.adj) %>%
pivot_wider(names_from = merged, values_from = p.adj) %>%
gt()
tc %>%
select(.y., merged, p.adj) %>%
pivot_wider(names_from = merged, values_from = p.adj) %>%
gt() %>%
fmt_number(
columns = `Hand Thrown vs. Thrust`,
decimals = 3,
use_seps = FALSE
)
tc %>%
select(.y., merged, p.adj) %>%
pivot_wider(names_from = merged, values_from = p.adj) %>%
gt() %>%
fmt_number(
columns = `Hand Thrown vs. Thrust`,
decimals = 3,
use_seps = FALSE
) %>%
fmt_number(
columns = `Hand Thrown vs. Unknown`,
decimals = 3,
use_seps = FALSE
) %>%
fmt_number(
columns = `Thrust vs. Unknown`,
decimals = 3,
use_seps = FALSE
)
a <- tc %>%
select(.y., merged, p.adj) %>%
pivot_wider(names_from = merged, values_from = p.adj) %>%
gt() %>%
fmt_number(
columns = `Hand Thrown vs. Thrust`,
decimals = 3,
use_seps = FALSE
) %>%
fmt_number(
columns = `Hand Thrown vs. Unknown`,
decimals = 3,
use_seps = FALSE
) %>%
fmt_number(
columns = `Thrust vs. Unknown`,
decimals = 3,
use_seps = FALSE
)
gtsave(a, filename = "pairwise.html", inline_css = TRUE)
tc <- bind_rows(t1, t2, t3, t4, t5,
t6, t7, t8, t9, t10,
t11, t12, t13, t14, t15, t16) %>%
unite("merged", group1, group2, sep = " vs. ", remove = FALSE) %>%
mutate(significance.padj = if_else(p.adj < 0.05, "Yes", "No"))
ggplot(tc, aes(merged, .y.,
colour = significance.padj)) +
geom_text(aes(x = merged, y = .y., label = round(p.adj, 3)),
family = "Roboto",
size = 4) +
labs(x = NULL,
y = NULL,
colour = NULL) +
theme_minimal() +
theme(text = element_text(family = "Roboto", size = 11),
legend.position = "none",
plot.margin = margin(20,20,20,20),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank()
)
data_recipe <-
recipe(~., data = data_clean) %>%
update_role(museum_id, delivery, proposed_grouping, proposed_grouping_2, new_role = "id") %>%
step_naomit(all_predictors()) %>%
step_normalize(all_predictors()) %>%
step_pca(all_predictors(), id = "pca") %>%
prep()
data_pca <-
data_recipe %>%
tidy(id = "pca")
data_recipe %>%
tidy(id = "pca", type = "variance") %>%
filter(terms == "percent variance") %>%
filter(component < 8) %>%
ggplot(aes(x = component, y = value)) +
geom_col(fill = "#b6dfe2") +
geom_text(aes(component, value + 1.5, label = scales::percent(round(value/100, 2))), family = "Roboto Black", color = "grey40", size = 4) +
xlab("Principal Component") +
ylab("Variance (%)") +
scale_x_continuous(breaks = seq(0,8,1)) +
theme_minimal() +
theme(text = element_text(family = "Roboto", size = 10),
plot.margin = margin(10, 5, 10, 5),
axis.title.x = element_text(size = 14, color = "grey20", margin = margin(10,0,0,0)),
axis.text = element_text(size = 11, colour = "grey40"),
plot.background = element_rect(colour = "#FFFFFF"),
axis.title.y = element_text(size = 11, color = "grey20", margin = margin(0,10,0,0)),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank())
data_recipe %>%
tidy(id = "pca", type = "variance") %>%
filter(terms == "percent variance") %>%
filter(component < 8)
data_pca %>%
mutate(value = value * 100) %>%
mutate(terms = tidytext::reorder_within(terms,
abs(value),
component)) %>%
group_by(component) %>%
top_n(abs(value), n = 8) %>%
filter(component %in% c("PC1", "PC2", "PC3", "PC4")) %>%
ggplot(aes(abs(value), terms, fill = value > 0)) +
geom_col() +
facet_wrap(~component, scales = "free_y") +
tidytext::scale_y_reordered() +
labs(
x = "Contribution (%)",
y = "Variable (Top 8)",
fill = "PCA Direction"
) +
scale_fill_manual(values = c("#b6dfe2", "#0A537D"),
labels = c("Negative", "Positive")) +
theme_minimal() +
theme(text = element_text(family = "Roboto", size = 10, colour = "grey20"),
plot.margin = margin(10, 10, 10, 10),
legend.text = element_text(size = 10),
plot.background = element_rect(colour = "#FFFFFF"),
axis.title.x = element_text(size = 11, margin = margin(10,0,0,0)),
axis.title.y = element_text(size = 11, margin = margin(0,10,0,0)),
strip.text.x = element_text(size = 14, margin = margin(5,0,10,0)),
axis.text = element_text(size = 10, colour = "grey40"),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank())
a <- data_recipe %>%
juice() %>%
dplyr::rename(Delivery = delivery) %>%
ggplot(aes(PC1, PC2, colour = Delivery, shape = Delivery)) +
geom_point(alpha = 0.8, size = 2) +
stat_ellipse(type = "norm") +
labs(x = "Principal Component 1 (44.6%)",
y = "Principal Component 2 (30.8%)") +
scale_colour_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
lims(x = c(-10,10),
y = c(-10,10)) +
coord_fixed() +
theme_minimal() +
theme(text = element_text(family = "Roboto", size = 10, colour = "grey20"),
plot.margin = margin(10, 10, 10, 10),
legend.position = "bottom",
legend.title = element_blank(),
legend.text  = element_text(size = 11),
axis.title.x = element_text(size = 11, margin = margin(10,0,0,0)),
axis.title.y = element_text(size = 11, margin = margin(0,10,0,0)),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank())
b <- data_recipe %>%
juice() %>%
dplyr::rename(Delivery = delivery) %>%
ggplot(aes(PC2, PC3, colour = Delivery, shape = Delivery)) +
geom_point(alpha = 0.8, size = 2) +
stat_ellipse(type = "norm") +
labs(x = "Principal Component 2 (30.8%)",
y = "Principal Component 3 (10.0%)") +
scale_colour_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
lims(x = c(-10,10),
y = c(-10,10)) +
coord_fixed() +
theme_minimal() +
theme(text = element_text(family = "Roboto", size = 10, colour = "grey20"),
plot.margin = margin(10, 10, 10, 10),
legend.position = "bottom",
legend.title = element_blank(),
legend.text  = element_text(size = 11),
axis.title.x = element_text(size = 11, margin = margin(10,0,0,0)),
axis.title.y = element_text(size = 11, margin = margin(0,10,0,0)),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank())
c <- data_recipe %>%
juice() %>%
dplyr::rename(Delivery = delivery) %>%
ggplot(aes(PC1, PC2, colour = proposed_grouping, shape = proposed_grouping)) +
geom_point(alpha = 0.8, size = 2) +
stat_ellipse(type = "norm") +
labs(x = "Principal Component 1 (44.6%)",
y = "Principal Component 2 (30.8%)") +
scale_colour_manual(values = c("#b6dfe2","#0A537D")) +
lims(x = c(-10,10),
y = c(-10,10)) +
coord_fixed() +
theme_minimal() +
theme(text = element_text(family = "Roboto", size = 10, colour = "grey20"),
plot.margin = margin(10, 10, 10, 10),
legend.position = "bottom",
legend.title = element_blank(),
legend.text  = element_text(size = 11),
axis.title.x = element_text(size = 11, margin = margin(10,0,0,0)),
axis.title.y = element_text(size = 11, margin = margin(0,10,0,0)),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank())
d <- data_recipe %>%
juice() %>%
dplyr::rename(Delivery = delivery) %>%
ggplot(aes(PC2, PC3, colour = proposed_grouping, shape = proposed_grouping)) +
geom_point(alpha = 0.8, size = 2) +
stat_ellipse(type = "norm") +
labs(x = "Principal Component 2 (30.8%)",
y = "Principal Component 3 (10.0%)") +
scale_colour_manual(values = c("#b6dfe2","#0A537D")) +
lims(x = c(-10,10),
y = c(-10,10)) +
coord_fixed() +
theme_minimal() +
theme(text = element_text(family = "Roboto", size = 10, colour = "grey20"),
plot.margin = margin(10, 10, 10, 10),
legend.position = "bottom",
legend.title = element_blank(),
legend.text  = element_text(size = 11),
axis.title.x = element_text(size = 11, margin = margin(10,0,0,0)),
axis.title.y = element_text(size = 11, margin = margin(0,10,0,0)),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank())
e <- data_recipe %>%
juice() %>%
dplyr::rename(Delivery = delivery) %>%
ggplot(aes(PC1, PC2, colour = proposed_grouping_2, shape = proposed_grouping_2)) +
geom_point(alpha = 0.8, size = 2) +
stat_ellipse(type = "norm") +
labs(x = "Principal Component 1 (44.6%)",
y = "Principal Component 2 (30.8%)") +
scale_colour_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
lims(x = c(-10,10),
y = c(-10,10)) +
coord_fixed() +
theme_minimal() +
theme(text = element_text(family = "Roboto", size = 10, colour = "grey20"),
plot.margin = margin(10, 10, 10, 10),
legend.position = "bottom",
legend.title = element_blank(),
legend.text  = element_text(size = 11),
axis.title.x = element_text(size = 11, margin = margin(10,0,0,0)),
axis.title.y = element_text(size = 11, margin = margin(0,10,0,0)),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank())
f <- data_recipe %>%
juice() %>%
dplyr::rename(Delivery = delivery) %>%
ggplot(aes(PC2, PC3, colour = proposed_grouping_2, shape = proposed_grouping_2)) +
geom_point(alpha = 0.8, size = 2) +
stat_ellipse(type = "norm") +
labs(x = "Principal Component 2 (30.8%)",
y = "Principal Component 3 (10.0%)") +
scale_colour_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
lims(x = c(-10,10),
y = c(-10,10)) +
coord_fixed() +
theme_minimal() +
theme(text = element_text(family = "Roboto", size = 10, colour = "grey20"),
plot.margin = margin(10, 10, 10, 10),
legend.position = "bottom",
legend.title = element_blank(),
legend.text  = element_text(size = 11),
axis.title.x = element_text(size = 11, margin = margin(10,0,0,0)),
axis.title.y = element_text(size = 11, margin = margin(0,10,0,0)),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank())
a + b
c + d
e + f
a + b
c + d
e + f
c + d
e+f
citation("tidyverse")
citation("ggcorrplot")
citation("tidymodels")
citation("skimr")
