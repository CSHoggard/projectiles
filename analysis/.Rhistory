e + f
data_recipe %>%
juice() %>%
dplyr::rename(Delivery = delivery) %>%
ggplot(aes(PC1, PC2, colour = Delivery, shape = Delivery)) +
geom_point(alpha = 0.8, size = 2) +
stat_ellipse(type = "norm") +
labs(x = "Principal Component 1 (44.6%)",
y = "Principal Component 2 (30.8%)") +
scale_colour_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
lims(x = c(-10,10),
y = c(-10,10)) +
coord_fixed() +
theme_minimal() +
theme(text = element_text(family = "Roboto", size = 10, colour = "grey20"),
plot.margin = margin(10, 10, 10, 10),
legend.position = "bottom",
legend.title = element_blank(),
legend.text  = element_text(size = 11),
axis.title.x = element_text(size = 11, margin = margin(10,0,0,0)),
axis.title.y = element_text(size = 11, margin = margin(0,10,0,0)),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank())
data_clean %>%
ggplot(aes(x = max_dia, fill = delivery)) +
geom_histogram(bins = 20, colour = "#FFFFFF") +
labs(x = "Maximum Diameter",
y = "Frequency") +
facet_wrap(~delivery, ncol = 1) +
scale_fill_manual(values = c("#0A537D", "#7d340a", "#b6dfe2"))+
theme_minimal() +
theme(legend.position = "none",
plot.margin = margin(10,20,10,20),
text = element_text(family = "Roboto", size = 11),
strip.text.x = element_text(size = 12, face = "bold", margin = margin(10,0,0,0)),
axis.title.x = element_text(size = 12, margin = margin(10,0,10,0)),
axis.title.y = element_text(size = 12, margin = margin(0,10,0,0)))
data_clean %>%
ggplot(aes(x = max_dia, fill = delivery)) +
geom_histogram(bins = 20, colour = "#FFFFFF") +
labs(x = "Maximum Diameter",
y = "Frequency") +
facet_wrap(~delivery, ncol = 1) +
scale_fill_manual(values = c("#0A537D", "#7d340a", "#b6dfe2"))+
theme_minimal() +
theme(legend.position = "none",
plot.margin = margin(10,20,10,20),
text = element_text(family = "Roboto", size = 11),
strip.text.x = element_text(size = 12, face = "bold", margin = margin(10,0,20,0)),
axis.title.x = element_text(size = 12, margin = margin(10,0,10,0)),
axis.title.y = element_text(size = 12, margin = margin(0,10,0,0)))
data_clean %>%
ggplot(aes(x = max_dia, fill = delivery)) +
geom_histogram(bins = 20, colour = "#FFFFFF") +
labs(x = "Maximum Diameter",
y = "Frequency") +
facet_wrap(~delivery, ncol = 1) +
scale_fill_manual(values = c("#0A537D", "#7d340a", "#b6dfe2"))+
theme_minimal() +
theme(legend.position = "none",
plot.margin = margin(10,20,10,20),
text = element_text(family = "Roboto", size = 11),
strip.text.x = element_text(size = 12, face = "bold", margin = margin(10,0,20,0)),
axis.title.x = element_text(size = 12, margin = margin(10,0,10,0)),
axis.title.y = element_text(size = 12, margin = margin(0,20,0,0)))
setwd("C:/Users/cshog/OneDrive/Documents/Github/projectiles/analysis")
data_clean %>%
ggplot(aes(x = max_dia, fill = delivery)) +
geom_histogram(bins = 20, colour = "#FFFFFF") +
labs(x = "Maximum Diameter",
y = "Frequency") +
facet_wrap(~delivery, ncol = 1) +
scale_fill_manual(values = c("#0A537D", "#7d340a", "#b6dfe2"))+
theme_minimal() +
theme(legend.position = "none",
plot.margin = margin(10,20,10,20),
plot.background = element_rect(colour = "#FFFFFF"),
text = element_text(family = "Roboto", size = 11),
strip.text.x = element_text(size = 12, face = "bold", margin = margin(10,0,20,0)),
axis.title.x = element_text(size = 12, margin = margin(10,0,10,0)),
axis.title.y = element_text(size = 12, margin = margin(0,20,0,0)))
ggsave(file = "Figure_8.png", plot = last_plot())
ggsave(file = "figures/Figure_8.png", plot = last_plot())
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, fill = delivery)) +
geom_point()
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, colour = delivery)) +
geom_point()
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, colour = delivery)) +
geom_point() +
labs(x = "Point of Balance (%)",
y = "Location of Maximum Diameter (%)") +
scale_fill_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
theme_minimal()
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, colour = delivery)) +
geom_point() +
labs(x = "Point of Balance (%)",
y = "Location of Maximum Diameter (%)") +
scale_fill_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
coord_fixed() +
theme_minimal()
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, colour = delivery)) +
geom_point() +
labs(x = "Point of Balance (%)",
y = "Location of Maximum Diameter (%)") +
scale_fill_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
theme_minimal()
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, colour = delivery)) +
geom_point() +
labs(x = "Point of Balance (%)",
y = "Location of Maximum Diameter (%)") +
scale_colour_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
theme_minimal() +
theme(legend.position = "none",
plot.margin = margin(10,20,10,20),
plot.background = element_rect(colour = "#FFFFFF"),
text = element_text(family = "Roboto", size = 11))
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, colour = delivery)) +
geom_point() +
labs(x = "Point of Balance (%)",
y = "Location of Maximum Diameter (%)") +
scale_colour_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
theme_minimal() +
theme(legend.position = "bottom",
plot.margin = margin(10,20,10,20),
plot.background = element_rect(colour = "#FFFFFF"),
text = element_text(family = "Roboto", size = 11))
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, colour = delivery)) +
geom_point() +
labs(x = "Point of Balance (%)",
y = "Location of Maximum Diameter (%)") +
scale_colour_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
plot.margin = margin(10,20,10,20),
plot.background = element_rect(colour = "#FFFFFF"),
text = element_text(family = "Roboto", size = 11))
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, colour = delivery)) +
geom_point() +
labs(x = "Point of Balance (%)",
y = "Location of Maximum Diameter (%)") +
scale_colour_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
plot.margin = margin(25,25,25,25),
plot.background = element_rect(colour = "#FFFFFF"),
text = element_text(family = "Roboto", size = 11))
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, colour = delivery)) +
geom_point() +
labs(x = "Point of Balance (%)",
y = "Location of Maximum Diameter (%)") +
scale_colour_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
plot.margin = margin(25,25,25,25),
plot.background = element_rect(colour = "#FFFFFF"),
text = element_text(family = "Roboto", size = 11),
axis.title.x = element_text(size = 12, margin = margin(10,0,10,0)),
axis.title.y = element_text(size = 12, margin = margin(0,20,0,0)))
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, colour = delivery), size = 2) +
geom_point() +
labs(x = "Point of Balance (%)",
y = "Location of Maximum Diameter (%)") +
scale_colour_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
plot.margin = margin(25,25,25,25),
plot.background = element_rect(colour = "#FFFFFF"),
text = element_text(family = "Roboto", size = 11),
axis.title.x = element_text(size = 12, margin = margin(10,0,10,0)),
axis.title.y = element_text(size = 12, margin = margin(0,20,0,0)))
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, colour = delivery)) +
geom_point(size = 2) +
labs(x = "Point of Balance (%)",
y = "Location of Maximum Diameter (%)") +
scale_colour_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
plot.margin = margin(25,25,25,25),
plot.background = element_rect(colour = "#FFFFFF"),
text = element_text(family = "Roboto", size = 11),
axis.title.x = element_text(size = 12, margin = margin(10,0,10,0)),
axis.title.y = element_text(size = 12, margin = margin(0,20,0,0)))
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, colour = delivery)) +
geom_point(size = 3) +
labs(x = "Point of Balance (%)",
y = "Location of Maximum Diameter (%)") +
scale_colour_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
plot.margin = margin(25,25,25,25),
plot.background = element_rect(colour = "#FFFFFF"),
text = element_text(family = "Roboto", size = 11),
axis.title.x = element_text(size = 12, margin = margin(10,0,10,0)),
axis.title.y = element_text(size = 12, margin = margin(0,20,0,0)))
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, colour = delivery)) +
geom_point(size = 3, pch = 23) +
labs(x = "Point of Balance (%)",
y = "Location of Maximum Diameter (%)") +
scale_colour_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
plot.margin = margin(25,25,25,25),
plot.background = element_rect(colour = "#FFFFFF"),
text = element_text(family = "Roboto", size = 11),
axis.title.x = element_text(size = 12, margin = margin(10,0,10,0)),
axis.title.y = element_text(size = 12, margin = margin(0,20,0,0)))
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, colour = delivery)) +
geom_point(size = 3, pch = 21) +
labs(x = "Point of Balance (%)",
y = "Location of Maximum Diameter (%)") +
scale_colour_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
plot.margin = margin(25,25,25,25),
plot.background = element_rect(colour = "#FFFFFF"),
text = element_text(family = "Roboto", size = 11),
axis.title.x = element_text(size = 12, margin = margin(10,0,10,0)),
axis.title.y = element_text(size = 12, margin = margin(0,20,0,0)))
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, fill = delivery)) +
geom_point(size = 3, pch = 21) +
labs(x = "Point of Balance (%)",
y = "Location of Maximum Diameter (%)") +
scale_fill_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
plot.margin = margin(25,25,25,25),
plot.background = element_rect(colour = "#FFFFFF"),
text = element_text(family = "Roboto", size = 11),
axis.title.x = element_text(size = 12, margin = margin(10,0,10,0)),
axis.title.y = element_text(size = 12, margin = margin(0,20,0,0)))
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, fill = delivery)) +
geom_point(size = 3, pch = 21, colour = "#FFFFFF") +
labs(x = "Point of Balance (%)",
y = "Location of Maximum Diameter (%)") +
scale_fill_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
plot.margin = margin(25,25,25,25),
plot.background = element_rect(colour = "#FFFFFF"),
text = element_text(family = "Roboto", size = 11),
axis.title.x = element_text(size = 12, margin = margin(10,0,10,0)),
axis.title.y = element_text(size = 12, margin = margin(0,20,0,0)))
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, fill = delivery)) +
geom_point(size = 5, pch = 21, colour = "#FFFFFF") +
labs(x = "Point of Balance (%)",
y = "Location of Maximum Diameter (%)") +
scale_fill_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
plot.margin = margin(25,25,25,25),
plot.background = element_rect(colour = "#FFFFFF"),
text = element_text(family = "Roboto", size = 11),
axis.title.x = element_text(size = 12, margin = margin(10,0,10,0)),
axis.title.y = element_text(size = 12, margin = margin(0,20,0,0)))
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, fill = delivery)) +
geom_point(size = 4, pch = 21, colour = "#FFFFFF") +
labs(x = "Point of Balance (%)",
y = "Location of Maximum Diameter (%)") +
scale_fill_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
plot.margin = margin(25,25,25,25),
plot.background = element_rect(colour = "#FFFFFF"),
text = element_text(family = "Roboto", size = 11),
axis.title.x = element_text(size = 12, margin = margin(10,0,10,0)),
axis.title.y = element_text(size = 12, margin = margin(0,20,0,0)))
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, fill = delivery)) +
geom_point(size = 4, pch = 21, colour = "#FFFFFF") +
labs(x = "Point of Balance (%)",
y = "Location of Maximum Diameter (%)") +
scale_fill_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
plot.margin = margin(25,25,25,25),
plot.background = element_rect(colour = "#FFFFFF"),
text = element_text(family = "Roboto", size = 11),
axis.title.x = element_text(size = 12, margin = margin(20,0,5,0)),
axis.title.y = element_text(size = 12, margin = margin(0,20,0,0)))
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, fill = delivery)) +
geom_point(size = 4, pch = 21, colour = "#FFFFFF") +
labs(x = "Point of Balance (%)",
y = "Location of Maximum Diameter (%)") +
scale_fill_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
lims(x = c(0, 70),
y = c(0, 70)) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
plot.margin = margin(25,25,25,25),
plot.background = element_rect(colour = "#FFFFFF"),
text = element_text(family = "Roboto", size = 11),
axis.title.x = element_text(size = 12, margin = margin(20,0,5,0)),
axis.title.y = element_text(size = 12, margin = margin(0,20,0,0)))
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, fill = delivery)) +
geom_point(size = 4, pch = 21, colour = "#FFFFFF") +
labs(x = "Point of Balance (%)",
y = "Location of Maximum Diameter (%)") +
scale_fill_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
lims(x = c(2, 70),
y = c(0, 70)) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
plot.margin = margin(25,25,25,25),
plot.background = element_rect(colour = "#FFFFFF"),
text = element_text(family = "Roboto", size = 11),
axis.title.x = element_text(size = 12, margin = margin(20,0,5,0)),
axis.title.y = element_text(size = 12, margin = margin(0,20,0,0)))
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, fill = delivery)) +
geom_point(size = 4, pch = 21, colour = "#FFFFFF") +
labs(x = "Point of Balance (%)",
y = "Location of Maximum Diameter (%)") +
scale_fill_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
lims(x = c(20, 70),
y = c(0, 70)) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
plot.margin = margin(25,25,25,25),
plot.background = element_rect(colour = "#FFFFFF"),
text = element_text(family = "Roboto", size = 11),
axis.title.x = element_text(size = 12, margin = margin(20,0,5,0)),
axis.title.y = element_text(size = 12, margin = margin(0,20,0,0)))
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, fill = delivery)) +
geom_point(size = 4, pch = 21, colour = "#FFFFFF") +
labs(x = "Point of Balance (%)",
y = "Location of Maximum Diameter (%)") +
scale_fill_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
lims(x = c(20, 60),
y = c(0, 70)) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
plot.margin = margin(25,25,25,25),
plot.background = element_rect(colour = "#FFFFFF"),
text = element_text(family = "Roboto", size = 11),
axis.title.x = element_text(size = 12, margin = margin(20,0,5,0)),
axis.title.y = element_text(size = 12, margin = margin(0,20,0,0)))
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, fill = delivery)) +
geom_point(size = 4, pch = 21, colour = "#FFFFFF") +
labs(x = "Point of Balance (%)",
y = "Location of Maximum Diameter (%)") +
scale_fill_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
lims(x = c(30, 60),
y = c(0, 70)) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
plot.margin = margin(25,25,25,25),
plot.background = element_rect(colour = "#FFFFFF"),
text = element_text(family = "Roboto", size = 11),
axis.title.x = element_text(size = 12, margin = margin(20,0,5,0)),
axis.title.y = element_text(size = 12, margin = margin(0,20,0,0)))
data_clean %>%
ggplot(aes(percent_po_b, percent_lmd, fill = delivery)) +
geom_point(size = 4, pch = 21, colour = "#FFFFFF") +
labs(x = "Point of Balance (%)",
y = "Location of Maximum Diameter (%)") +
scale_fill_manual(values = c("#0A537D", "#7d340a", "#b6dfe2")) +
lims(x = c(30, 60),
y = c(0, 70)) +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_blank(),
plot.margin = margin(25,25,15,25),
plot.background = element_rect(colour = "#FFFFFF"),
text = element_text(family = "Roboto", size = 11),
axis.title.x = element_text(size = 12, margin = margin(20,0,5,0)),
axis.title.y = element_text(size = 12, margin = margin(0,20,0,0)))
ggsave(file = "figures/Figure_9.png", plot = last_plot())
b / a / e / f / c / d  & theme(plot.margin = margin(10,20,10,20))
a <- data_clean %>%
ggplot(aes(length)) +
stat_slab(scale = 0.6, position = "dodge", slab_fill = "#b6dfe2", slab_colour = "#0A537D", alpha = 0.6) +
stat_dotsinterval(side = "bottom", scale = 1, position = "dodge", slab_fill = NA, slab_colour = NA) +
theme_minimal() +
lims(x = c(0,5000),
y = c(-1,1)) +
labs(x = "Length (mm)") +
theme(text = element_text(family = "Roboto", size = 10),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_text(margin = margin(5,0,0,0)))
b <- data_clean %>%
ggplot(aes(mass)) +
stat_slab(scale = 0.6, position = "dodge", slab_fill = "#b6dfe2", slab_colour = "#0A537D", alpha = 0.6) +
stat_dotsinterval(side = "bottom", scale = 1, position = "dodge", slab_fill = NA, slab_colour = NA) +
lims(x = c(0,2500),
y = c(-1,1)) +
theme_minimal() +
labs(x = "Mass (g)") +
theme(text = element_text(family = "Roboto", size = 10),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_text(margin = margin(5,0,0,0)))
c <- data_clean %>%
ggplot(aes(max_dia)) +
stat_slab(scale = 0.6, position = "dodge", slab_fill = "#b6dfe2", slab_colour = "#0A537D", alpha = 0.6) +
stat_dotsinterval(side = "bottom", scale = 1, position = "dodge", slab_fill = NA, slab_colour = NA) +
lims(x = c(0,40),
y = c(-2.5,1)) +
theme_minimal() +
labs(x = "Max Diameter (mm)") +
theme(text = element_text(family = "Roboto", size = 10),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_text(margin = margin(5,0,0,0)))
d <- data_clean %>%
ggplot(aes(dia_mid)) +
stat_slab(scale = 0.6, position = "dodge", slab_fill = "#b6dfe2", slab_colour = "#0A537D", alpha = 0.6) +
stat_dotsinterval(side = "bottom", scale = 1, position = "dodge", slab_fill = NA, slab_colour = NA) +
lims(x = c(0,40),
y = c(-2.5,1)) +
theme_minimal() +
labs(x = "Diameter at Midpoint (mm)") +
theme(text = element_text(family = "Roboto", size = 10),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_text(margin = margin(5,0,0,0)))
e <- data_clean %>%
ggplot(aes(lmd)) +
stat_slab(scale = 0.6, position = "dodge", slab_fill = "#b6dfe2", slab_colour = "#0A537D", alpha = 0.6) +
stat_dotsinterval(side = "bottom", scale = 1, position = "dodge", slab_fill = NA, slab_colour = NA) +
lims(x = c(0,5000),
y = c(-2,1)) +
theme_minimal() +
labs(x = "Location of Midpoint (mm)") +
theme(text = element_text(family = "Roboto", size = 10),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_text(margin = margin(5,0,0,0)))
f <- data_clean %>%
ggplot(aes(po_b)) +
stat_slab(scale = 0.6, position = "dodge", slab_fill = "#b6dfe2", slab_colour = "#0A537D", alpha = 0.6) +
stat_dotsinterval(side = "bottom", scale = 1, position = "dodge", slab_fill = NA, slab_colour = NA) +
lims(x = c(0,5000),
y = c(-1,1)) +
theme_minimal() +
labs(x = "Point of Balance (mm)") +
theme(text = element_text(family = "Roboto", size = 10),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_text(margin = margin(5,0,0,0)))
b / a / e / f / c / d  & theme(plot.margin = margin(10,20,10,20))
e <- data_clean %>%
ggplot(aes(lmd)) +
stat_slab(scale = 0.6, position = "dodge", slab_fill = "#b6dfe2", slab_colour = "#0A537D", alpha = 0.6) +
stat_dotsinterval(side = "bottom", scale = 1, position = "dodge", slab_fill = NA, slab_colour = NA) +
lims(x = c(0,5000),
y = c(-2,1)) +
theme_minimal() +
labs(x = "Location of Maximum Diameter (mm)") +
theme(text = element_text(family = "Roboto", size = 10),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.x = element_text(margin = margin(5,0,0,0)))
b / a / f / e / c / d  & theme(plot.margin = margin(10,20,10,20))
ggsave(file = "figures/Figure_1.png", plot = last_plot(), height = 3017, width = 2263, units = "px")
